[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-agent-chat"
version = "1.0.0"
description = "A Flask-based multi-agent chat system with Model Context Protocol support"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "MCP Agent Chat Team"}
]
keywords = ["ai", "agents", "chat", "mcp", "flask"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "flask==2.3.2",
    "flask-sqlalchemy==3.0.3",
    "flask-cors==3.0.10",
    "requests==2.31.0",
    "python-dotenv==1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
]

[project.urls]
Homepage = "https://github.com/your-org/mcp-agent-chat"
Repository = "https://github.com/your-org/mcp-agent-chat"
Documentation = "https://github.com/your-org/mcp-agent-chat#readme"
Issues = "https://github.com/your-org/mcp-agent-chat/issues"

[project.scripts]
mcp-agent-chat = "app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["models*", "routes*", "services*", "utils*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
