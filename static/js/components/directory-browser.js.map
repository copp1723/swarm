{
  "version": 3,
  "file": "directory-browser.js",
  "sourceRoot": "",
  "sources": [
    "directory-browser.js"
  ],
  "sourcesContent": [
    "// Directory Browser Component\nimport { FileAPI } from '../services/api.js';\nimport { createElement, escapeHtml, updateIcons } from '../utils/dom-helpers.js';\n\nexport class DirectoryBrowser {\n    constructor() {\n        this.fileAPI = new FileAPI();\n        this.currentPath = '/Users/copp1723/Desktop';\n        this.onSelect = null;\n        this.modal = null;\n    }\n\n    async open(initialPath = null) {\n        this.currentPath = initialPath || this.currentPath;\n        \n        // Create modal\n        this.modal = createElement('div', 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50');\n        this.modal.innerHTML = `\n            <div class=\"bg-white rounded-lg p-6 max-w-2xl w-full max-h-[80vh] overflow-hidden\">\n                <h3 class=\"text-lg font-semibold mb-4\">Select Directory</h3>\n                <div class=\"mb-4\">\n                    <div class=\"flex items-center space-x-2 mb-2\">\n                        <span class=\"text-sm text-gray-600\">Current Path:</span>\n                        <span id=\"browser-current-path\" class=\"text-sm font-mono bg-gray-100 px-2 py-1 rounded\">${escapeHtml(this.currentPath)}</span>\n                    </div>\n                    <button id=\"browser-navigate-up\" class=\"text-sm text-blue-600 hover:underline\">Go up \u2191</button>\n                </div>\n                <div id=\"browser-directory-list\" class=\"border rounded-lg p-4 h-96 overflow-y-auto bg-gray-50\">\n                    <div class=\"text-center text-gray-500\">Loading...</div>\n                </div>\n                <div class=\"mt-4 flex justify-end space-x-2\">\n                    <button id=\"browser-cancel\" class=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg\">Cancel</button>\n                    <button id=\"browser-select\" class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">Select This Directory</button>\n                </div>\n            </div>\n        `;\n        \n        document.body.appendChild(this.modal);\n        \n        // Attach event listeners\n        document.getElementById('browser-navigate-up').addEventListener('click', () => this.navigateUp());\n        document.getElementById('browser-cancel').addEventListener('click', () => this.close());\n        document.getElementById('browser-select').addEventListener('click', () => this.selectCurrent());\n        \n        // Load initial directory\n        await this.loadDirectory(this.currentPath);\n        \n        return new Promise((resolve) => {\n            this.onSelect = resolve;\n        });\n    }\n\n    async loadDirectory(path) {\n        try {\n            const response = await this.fileAPI.browseDirectory(path);\n            \n            if (!response.data) {\n                throw new Error(response.error || 'Failed to load directory');\n            }\n            \n            const dirList = document.getElementById('browser-directory-list');\n            dirList.innerHTML = '';\n            \n            // Update current path display\n            this.currentPath = path;\n            document.getElementById('browser-current-path').textContent = path;\n            \n            const items = response.data.items || [];\n            \n            // Sort directories first, then files\n            const directories = items.filter(item => item.is_directory).sort((a, b) => a.name.localeCompare(b.name));\n            const files = items.filter(item => !item.is_directory).sort((a, b) => a.name.localeCompare(b.name));\n            \n            // Add directories\n            directories.forEach(dir => {\n                const dirDiv = createElement('div', 'flex items-center space-x-2 p-2 hover:bg-gray-100 rounded cursor-pointer');\n                dirDiv.innerHTML = `\n                    <i data-lucide=\"folder\" class=\"w-4 h-4 text-yellow-600\"></i>\n                    <span class=\"text-sm\">${escapeHtml(dir.name)}</span>\n                `;\n                dirDiv.addEventListener('click', () => this.loadDirectory(dir.path));\n                dirList.appendChild(dirDiv);\n            });\n            \n            // Add files (display only)\n            files.forEach(file => {\n                const fileDiv = createElement('div', 'flex items-center space-x-2 p-2 text-gray-500');\n                fileDiv.innerHTML = `\n                    <i data-lucide=\"file\" class=\"w-4 h-4\"></i>\n                    <span class=\"text-sm\">${escapeHtml(file.name)}</span>\n                `;\n                dirList.appendChild(fileDiv);\n            });\n            \n            updateIcons();\n            \n            if (directories.length === 0 && files.length === 0) {\n                dirList.innerHTML = '<div class=\"text-center text-gray-500 text-sm\">Empty directory</div>';\n            }\n            \n        } catch (error) {\n            console.error('Error loading directory:', error);\n            const dirList = document.getElementById('browser-directory-list');\n            dirList.innerHTML = `<div class=\"text-center text-red-500 text-sm\">Error: ${escapeHtml(error.message)}</div>`;\n        }\n    }\n\n    navigateUp() {\n        const parentPath = this.currentPath.substring(0, this.currentPath.lastIndexOf('/')) || '/';\n        this.loadDirectory(parentPath);\n    }\n\n    selectCurrent() {\n        if (this.onSelect) {\n            this.onSelect(this.currentPath);\n        }\n        this.close();\n    }\n\n    close() {\n        if (this.modal) {\n            this.modal.remove();\n            this.modal = null;\n        }\n        if (this.onSelect) {\n            this.onSelect(null);\n        }\n    }\n}"
  ],
  "names": [],
  "mappings
}