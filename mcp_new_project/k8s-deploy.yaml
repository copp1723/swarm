apiVersion: v1
kind: Namespace
metadata:
  name: swarm-mcp
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: swarm-config
  namespace: swarm-mcp
data:
  FLASK_ENV: "production"
  ENABLE_WEBSOCKETS: "true"
  ENABLE_CONVOY: "true"
  REDIS_URL: "redis://redis-service:6379/0"
---
apiVersion: v1
kind: Secret
metadata:
  name: swarm-secrets
  namespace: swarm-mcp
type: Opaque
stringData:
  DATABASE_URL: "postgresql://user:password@postgres:5432/swarm_db"
  SECRET_KEY: "your-production-secret-key"
  OPENROUTER_API_KEY: "your-openrouter-api-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swarm-app
  namespace: swarm-mcp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: swarm-app
  template:
    metadata:
      labels:
        app: swarm-app
    spec:
      containers:
      - name: app
        image: your-registry/swarm-mcp:latest
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: swarm-config
        - secretRef:
            name: swarm-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: swarm-service
  namespace: swarm-mcp
spec:
  selector:
    app: swarm-app
  ports:
  - port: 80
    targetPort: 8000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: swarm-mcp
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: swarm_db
        - name: POSTGRES_USER
          value: swarm_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi